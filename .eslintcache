[{"/Users/yobany/Documents/web-dev-local/projects/weather-app/src/index.js":"1","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/App.js":"2","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/reportWebVitals.js":"3","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/FetchWeather.js":"4","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/Search.js":"5","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/MainCard.js":"6","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/ThreeHourCard.js":"7","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/News.js":"8"},{"size":500,"mtime":1607443510118,"results":"9","hashOfConfig":"10"},{"size":2725,"mtime":1613422150319,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607443510119,"results":"12","hashOfConfig":"10"},{"size":0,"mtime":1608664260478,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1611087155244,"results":"15","hashOfConfig":"10"},{"size":1625,"mtime":1613415318075,"results":"16","hashOfConfig":"10"},{"size":2365,"mtime":1611061929972,"results":"17","hashOfConfig":"14"},{"size":776,"mtime":1613420824135,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"rku0cq",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dyhbgk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/yobany/Documents/web-dev-local/projects/weather-app/src/index.js",[],["40","41"],"/Users/yobany/Documents/web-dev-local/projects/weather-app/src/App.js",["42"],"import React, { useEffect, useState } from 'react'\nimport Search from './components/Search'\nimport MainCard from './components/MainCard'\nimport News from './components/News'\nimport axios from 'axios'\nimport { useMediaQuery } from \"@material-ui/core\"\nimport './App.css'\n\nconst api_key_weather = process.env.REACT_APP_API_KEY_WEATHER\nconst api_key_news = process.env.REACT_APP_API_KEY_NEWS\n\nconst App = () => {\n\n  // variable for using a media query\n  const isNavSm = useMediaQuery('(max-width: 775px)')\n\n    const [weatherData, setWeatherData] = useState(0)\n    const [newsData, setNewsData] = useState(0)\n    const [cityInput, setCityInput] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    // on click\n    const getData = event => {\n        event.preventDefault()\n        setIsLoading(true)\n          getWeather()\n          getNews()\n        setIsLoading(false)\n    }\n    // on click\n\n    // weather\n    const getWeather = () => {\n        let weatherURL = `https://dry-cliffs-62970.herokuapp.com/api.openweathermap.org/data/2.5/weather?q=${cityInput},US&appid=${api_key_weather}`;\n        axios.get(weatherURL)\n        .then(res => {\n            setWeatherData(res)\n        }).catch((error) => {\n          console.log(error)\n        })\n        console.log(weatherData)\n    }\n    //weather\n    \n    // news\n    var options = {\n      method: 'GET',\n      url: 'https://dry-cliffs-62970.herokuapp.com/api.datanews.io/v1/news',\n      params: {q: `${cityInput} local`, from: '2021-02-01', to: '2021-02-15', language: 'en'},\n      headers: {'Content-Type': 'application/json', 'x-api-key': `${api_key_news}`}\n    };\n\n    const getNews = () => {\n      axios.request(options)\n      .then(function (response) {\n        setNewsData(response.data)\n        console.log(response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n    // news\n\n    const handleInput = event => {\n      let input = event.target.value\n        setCityInput(input)\n    }\n\n  return (\n    <div>\n      <h1 className='app-title'>CURRENTLY˚</h1>\n      <Search handleInput={handleInput} data={getData} />\n      <p style={{marginTop: '2rem'}}>{isLoading ? `loading...` : null}</p>\n        <div className={isNavSm ? 'content-div-sm' : 'content-div-lg'}>\n          {weatherData === 0 ? null : <MainCard className={isNavSm ? 'weather-item-sm' : 'weather-item-lg'} weatherData={weatherData} />}\n          <div className={isNavSm ? 'news-item-sm' : 'news-item-lg'}>\n            {newsData === 0 ? null : newsData.hits.map(item => <News title={item.title} image={item.imageUrl} content={item.content} pubDate={item.pubDate} url={item.url} />)}\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default App","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/reportWebVitals.js",[],"/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/FetchWeather.js",[],"/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/Search.js",["43"],"import React, { useState } from 'react'\nimport './Search.css'\n\nconst Search = props => {\n    return (\n        <div>\n            <form className='search' autoComplete='off'>\n            <input className='item-a' type='text' placeholder='city name' onChange={props.handleInput}></input>\n                <button className='item-b' type='submit' onClick={props.data}>Go</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Search","/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/MainCard.js",["44"],"import React from 'react'\nimport { useMediaQuery } from \"@material-ui/core\"\nimport './MainCard.css'\n\nconst MainCard = props => {\n    // variable for using a media query\n    const isNavSm = useMediaQuery('(max-width: 599px)')\n\n    const fromKtoF = kelvin => {\n        return Math.round((((kelvin - 273.15) * (9/5)) + 32))\n    }\n\n    const mpsToMph = speed => {\n        return Math.round(speed * 2.237)\n    }\n\n    let cityName = props.weatherData.data.name\n    let currentTemp = fromKtoF(props.weatherData.data.main.temp)\n    let tempHigh = fromKtoF(props.weatherData.data.main.temp_max)\n    let tempLow = fromKtoF(props.weatherData.data.main.temp_min)\n    let weatherDescription = props.weatherData.data.weather[0].description\n    let windSpeed = mpsToMph(props.weatherData.data.wind.speed)\n    let weatherIcon = props.weatherData.data.weather[0].icon\n\n    return (\n        <div className='main-card-div'>\n            <h2 className='main-card-title'>{cityName}</h2>\n            <h1 className='main-card-temp'>{`${currentTemp} F˚`}</h1>\n            <p className='main-card-temp-high'>{`High: ${tempHigh} F˚`}</p>\n            <p className='main-card-temp-low'>{`Low: ${tempLow} F˚`}</p>\n            <div className={isNavSm ? 'main-card-weather-sm' : 'main-card-weather-lg'}>\n                <img className='main-card-weather-icon' src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`} />\n                <p className='main-card-description'>{`${weatherDescription}`}</p>\n            </div>\n            <p className='main-card-wind'>{`Wind Speed: ${windSpeed} mph`}</p>\n        </div>\n    )\n}\n\nexport default MainCard",["45","46"],"/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/ThreeHourCard.js",["47","48","49","50","51","52","53","54","55","56","57","58"],"/Users/yobany/Documents/web-dev-local/projects/weather-app/src/components/News.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":32,"column":17,"nodeType":"70","endLine":32,"endColumn":122},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","replacedBy":"72"},{"ruleId":"63","severity":1,"message":"73","line":5,"column":9,"nodeType":"65","messageId":"66","endLine":5,"endColumn":13},{"ruleId":"63","severity":1,"message":"74","line":26,"column":13,"nodeType":"65","messageId":"66","endLine":26,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":38,"column":26,"nodeType":"77","messageId":"78","endLine":38,"endColumn":28},{"ruleId":"75","severity":1,"message":"76","line":48,"column":52,"nodeType":"77","messageId":"78","endLine":48,"endColumn":54},{"ruleId":"75","severity":1,"message":"76","line":50,"column":40,"nodeType":"77","messageId":"78","endLine":50,"endColumn":42},{"ruleId":"75","severity":1,"message":"76","line":52,"column":40,"nodeType":"77","messageId":"78","endLine":52,"endColumn":42},{"ruleId":"75","severity":1,"message":"76","line":54,"column":40,"nodeType":"77","messageId":"78","endLine":54,"endColumn":42},{"ruleId":"75","severity":1,"message":"76","line":56,"column":40,"nodeType":"77","messageId":"78","endLine":56,"endColumn":42},{"ruleId":"75","severity":1,"message":"76","line":58,"column":40,"nodeType":"77","messageId":"78","endLine":58,"endColumn":42},{"ruleId":"75","severity":1,"message":"76","line":60,"column":40,"nodeType":"77","messageId":"78","endLine":60,"endColumn":42},{"ruleId":"75","severity":1,"message":"76","line":62,"column":40,"nodeType":"77","messageId":"78","endLine":62,"endColumn":42},{"ruleId":"68","severity":1,"message":"69","line":73,"column":13,"nodeType":"70","endLine":73,"endColumn":121},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["79"],["80"],"'days' is assigned a value but never used.","'date' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]